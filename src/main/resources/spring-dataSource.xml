<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/task  
	http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee.xsd
	"
	default-autowire="byName" default-lazy-init="true">

	<context:component-scan base-package="info.zznet.znms">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:property-placeholder location="${jdbcPropertiesPath}" ignore-unresolvable="true" />

	<!--数据库连接 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.initialSize}"/>
		<property name="maxActive" value="${druid.maxActive}"/>
		<property name="minIdle" value="${druid.minIdle}"/>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.maxWait}"/>
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMills}"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>
		
		<!-- 尝试解决超时问题 -->
		<property name="validationQuery" value="SELECT 1" />  
	    <property name="testWhileIdle" value="${druid.testWhileIdle}" />  
	    <property name="testOnBorrow" value="${druid.testOnBorrow}" />  
	    <property name="testOnReturn" value="${druid.testOnReturn}" />  
   
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
	    <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" /> 
	    
	    <!-- 连接泄漏处理。Druid提供了RemoveAbandanded相关配置，用来关闭长时间不使用的连接（例如忘记关闭连接）。 -->
       <property name="removeAbandoned" value="${druid.removeAbandoned}" />
       <!-- 180秒，也就是3分钟 -->
       <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
       <!-- 关闭abanded连接时输出错误日志 -->
       <property name="logAbandoned" value="${druid.logAbandoned}" />
	    <!-- 尝试解决超时问题 -->
	</bean>

	<!-- mybatis配置 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mappers/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- 扫描指定位置mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="info.zznet.znms.*.dao" />
		<property name="markerInterface" value="info.zznet.znms.base.dao.BaseMapper" />
	</bean>
	
	<!-- 事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解式事务管理 -->
	<tx:annotation-driven transaction-manager="txManager" />
	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>
