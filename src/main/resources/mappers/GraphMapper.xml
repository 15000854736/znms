<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="info.zznet.znms.base.dao.GraphMapper" >
  <resultMap id="BaseResultMap" type="info.zznet.znms.base.entity.Graph" >
    <id column="GRAPH_UUID" property="graphUuid" jdbcType="VARCHAR" />
    <result column="HOST_UUID" property="hostUuid" jdbcType="VARCHAR" />
    <result column="HOST_IP" property="hostIp" jdbcType="VARCHAR" />
    <result column="GRAPH_TYPE" property="graphType" jdbcType="INTEGER" />
    <result column="GRAPH_TEMPLATE_ID" property="graphTemplateId" jdbcType="VARCHAR" />
    <result column="GRAPH_TEMPLATE_NAME" property="graphTemplateName" jdbcType="VARCHAR" />
    <result column="GRAPH_NAME" property="graphName" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <collection property="host" column="HOST_UUID" select="info.zznet.znms.base.dao.HostMapper.selectByPrimaryKey"></collection>
  </resultMap>
  
  <resultMap id="GraphDTOMap" type="info.zznet.znms.base.entity.dto.GraphDTO" >
    <id column="GRAPH_UUID" property="graphUuid" jdbcType="VARCHAR" />
    <result column="GRAPH_TEMPLATE_SIMPLE_NAME" property="graphTemplateSimpleName" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    GRAPH_UUID, HOST_UUID, HOST_IP, GRAPH_TYPE, GRAPH_TEMPLATE_ID, GRAPH_TEMPLATE_NAME, GRAPH_NAME, CREATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from GRAPH
    where GRAPH_UUID = #{graphUuid,jdbcType=VARCHAR}
  </select>
  
  <select id="findPageList" resultMap="BaseResultMap"  parameterType="info.zznet.znms.web.module.common.page.Pager">
	SELECT 
	<include refid="Base_Column_List" />
    FROM GRAPH 
    <where> 
    	1=1
   	 <if test="condition != null">
		<foreach collection="condition" item="item">
	  		<if test="item.value != null and item.value !=''">
	  			<if test="item.key == 'hostUuid' and item.value != '-1'">
	  				<![CDATA[AND HOST_UUID = #{item.value} ]]>  
	  			</if>
	  			<if test="item.key == 'graphTemplateId' and item.value != '-1'">
	  				<![CDATA[AND GRAPH_TEMPLATE_ID = #{item.value} ]]>  
	  			</if>
	  			<if test="item.key == 'graphType' and item.value != '-1'">
	  				<![CDATA[AND GRAPH_TYPE = #{item.value} ]]>  
	  			</if>
	  			<if test="item.key == 'graphName'">
	  				<![CDATA[AND GRAPH_NAME like CONCAT('%',#{item.value},'%') ]]>  
	  			</if>
	  		</if>
  		</foreach>
	</if>
  	</where> 
  		ORDER BY CREATE_TIME DESC	
  		limit #{pager.limit} offset #{pager.offset}
	</select>
	
	<select id="getCount" resultType="java.lang.Long">
		SELECT count(GRAPH_UUID) FROM GRAPH
    <where> 
    	1=1
   	 <if test="condition != null">
		<foreach collection="condition" item="item">
	  		<if test="item.value != null and item.value !=''">
	  			<if test="item.key == 'hostUuid' and item.value != '-1'">
	  				<![CDATA[AND HOST_UUID = #{item.value} ]]>  
	  			</if>
	  			<if test="item.key == 'graphTemplateId' and item.value != '-1'">
	  				<![CDATA[AND GRAPH_TEMPLATE_ID = #{item.value} ]]>  
	  			</if>
	  			<if test="item.key == 'graphType' and item.value != '-1'">
	  				<![CDATA[AND GRAPH_TYPE = #{item.value} ]]>  
	  			</if>
	  			<if test="item.key == 'graphName'">
	  				<![CDATA[AND GRAPH_NAME like CONCAT('%',#{item.value},'%') ]]>  
	  			</if>
	  		</if>
  		</foreach>
	</if>
  	</where> 
	</select>
	
	
  <select id="findGraphByBasci" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from GRAPH
    where HOST_UUID = #{hostUuid,jdbcType=VARCHAR}
    and GRAPH_TYPE = #{graphType,jdbcType=INTEGER}
    and GRAPH_TEMPLATE_ID = #{graphTemplateId,jdbcType=INTEGER}
  </select>
  
  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from GRAPH
  </select>
  
  <select id="findGraphByHost" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from GRAPH
    where HOST_UUID = #{hostUuid,jdbcType=VARCHAR}
  </select>
  
  <select id="checkGraphType" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select GRAPH_TYPE
    from GRAPH
    where GRAPH_UUID = #{graphUuid,jdbcType=VARCHAR}
  </select>
  
  <select id="findGraphDTO" resultMap="GraphDTOMap">
    select a.GRAPH_UUID,b.GRAPH_TEMPLATE_SIMPLE_NAME
    from GRAPH a,GRAPH_TEMPLATE b
    where a.GRAPH_TEMPLATE_ID = b.GRAPH_TEMPLATE_ID
    and a.HOST_UUID = #{hostUuid,jdbcType=VARCHAR}
    and a.GRAPH_TYPE = #{basicGraphType,jdbcType=INTEGER}
    and a.GRAPH_TEMPLATE_ID = #{cpuTypeId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from GRAPH
    where GRAPH_UUID = #{graphUuid,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteGraphByHostUuid" parameterType="java.lang.String" >
    delete from GRAPH
    where HOST_UUID = #{hostUuid,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="info.zznet.znms.base.entity.Graph" >
    insert into GRAPH (GRAPH_UUID, HOST_UUID, HOST_IP, 
      GRAPH_TYPE, GRAPH_TEMPLATE_ID, GRAPH_TEMPLATE_NAME, 
      GRAPH_NAME, CREATE_TIME)
    values (#{graphUuid,jdbcType=VARCHAR}, #{hostUuid,jdbcType=VARCHAR}, #{hostIp,jdbcType=VARCHAR}, 
      #{graphType,jdbcType=INTEGER}, #{graphTemplateId,jdbcType=VARCHAR}, #{graphTemplateName,jdbcType=VARCHAR}, 
      #{graphName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="info.zznet.znms.base.entity.Graph" >
    insert into GRAPH
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="graphUuid != null" >
        GRAPH_UUID,
      </if>
      <if test="hostUuid != null" >
        HOST_UUID,
      </if>
      <if test="hostIp != null" >
        HOST_IP,
      </if>
      <if test="graphType != null" >
        GRAPH_TYPE,
      </if>
      <if test="graphTemplateId != null" >
        GRAPH_TEMPLATE_ID,
      </if>
      <if test="graphTemplateName != null" >
        GRAPH_TEMPLATE_NAME,
      </if>
      <if test="graphName != null" >
        GRAPH_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="graphUuid != null" >
        #{graphUuid,jdbcType=VARCHAR},
      </if>
      <if test="hostUuid != null" >
        #{hostUuid,jdbcType=VARCHAR},
      </if>
      <if test="hostIp != null" >
        #{hostIp,jdbcType=VARCHAR},
      </if>
      <if test="graphType != null" >
        #{graphType,jdbcType=INTEGER},
      </if>
      <if test="graphTemplateId != null" >
        #{graphTemplateId,jdbcType=VARCHAR},
      </if>
      <if test="graphTemplateName != null" >
        #{graphTemplateName,jdbcType=VARCHAR},
      </if>
      <if test="graphName != null" >
        #{graphName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="info.zznet.znms.base.entity.Graph" >
    update GRAPH
    <set >
      <if test="hostUuid != null" >
        HOST_UUID = #{hostUuid,jdbcType=VARCHAR},
      </if>
      <if test="hostIp != null" >
        HOST_IP = #{hostIp,jdbcType=VARCHAR},
      </if>
      <if test="graphType != null" >
        GRAPH_TYPE = #{graphType,jdbcType=INTEGER},
      </if>
      <if test="graphTemplateId != null" >
        GRAPH_TEMPLATE_ID = #{graphTemplateId,jdbcType=VARCHAR},
      </if>
      <if test="graphTemplateName != null" >
        GRAPH_TEMPLATE_NAME = #{graphTemplateName,jdbcType=VARCHAR},
      </if>
      <if test="graphName != null" >
        GRAPH_NAME = #{graphName,jdbcType=VARCHAR},
      </if>
    </set>
    where GRAPH_UUID = #{graphUuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="info.zznet.znms.base.entity.Graph" >
    update GRAPH
    set HOST_UUID = #{hostUuid,jdbcType=VARCHAR},
      HOST_IP = #{hostIp,jdbcType=VARCHAR},
      GRAPH_TYPE = #{graphType,jdbcType=INTEGER},
      GRAPH_TEMPLATE_ID = #{graphTemplateId,jdbcType=VARCHAR},
      GRAPH_TEMPLATE_NAME = #{graphTemplateName,jdbcType=VARCHAR},
      GRAPH_NAME = #{graphName,jdbcType=VARCHAR}
    where GRAPH_UUID = #{graphUuid,jdbcType=VARCHAR}
  </update>
</mapper>