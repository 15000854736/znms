package info.zznet.znms.web.module.topology.controller;

import info.zznet.znms.base.common.BaseController;
import info.zznet.znms.base.constants.PermissionConstants;
import info.zznet.znms.base.entity.Graph;
import info.zznet.znms.base.util.StringUtil;
import info.zznet.znms.spider.Engine;
import info.zznet.znms.spider.bean.ScanHost;
import info.zznet.znms.web.annotation.CheckPermission;
import info.zznet.znms.web.module.monitor.bean.MonitorQueryBean;
import info.zznet.znms.web.module.topology.service.TopologyService;
import net.sf.json.JSON;
import net.sf.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import java.util.Iterator;
import java.util.List;
import java.util.Map;

import static info.zznet.znms.spider.Engine.hosts;

/**
 * Created by shenqilei on 2016/10/8.
 */
@Controller
@RequestMapping("/topology")
public class TopologyController extends BaseController{

    private static final String VIEW_MAIN = "topology/topology_main";

    @Autowired
    private TopologyService topologyService;

    /**
     * 初始化系统日志页面
     * @return
     */
    @RequestMapping("")
    //@CheckPermission(PermissionConstants.P_TOPOLOGY_VIEW)
    public ModelAndView init(){
        return new ModelAndView(VIEW_MAIN);
    }

    @RequestMapping(value="/hostMap", method= RequestMethod.POST, produces = "application/json; charset=utf-8")
    @ResponseBody
    public String getHostMap(){
        JSONObject result = new JSONObject();

        Map<String,ScanHost> hosts = Engine.hosts;

        Iterator<Map.Entry<String,ScanHost>> it = hosts.entrySet().iterator();
        while (it.hasNext()){
            Map.Entry<String,ScanHost> host = it.next();
            result.put(host.getKey(),host.getValue().getName());
        }

        return result.toString();
    }

    @RequestMapping(value="/iconMap", method= RequestMethod.POST, produces = "application/json; charset=utf-8")
    @ResponseBody
    public String getIconMap(){
        JSONObject result = new JSONObject();

        //TODO 图标信息维护到数据库
        result.put("switch","交换机");
        result.put("router","路由器");
        result.put("server","服务器");
        result.put("wirelesshost","无线");
        result.put("firewall","防火墙");


        return result.toString();
    }

    @RequestMapping(value="/trafficHostMap", method= RequestMethod.POST, produces = "application/json; charset=utf-8")
    @ResponseBody
    public String getTrafficHostMap(@RequestParam String targetIp,@RequestParam String sourceIp){
        JSONObject result = new JSONObject();

        List<ScanHost> hosts = topologyService.getSelectedHost(targetIp,sourceIp);

        result.put("","无");
        for (ScanHost scanHost:hosts){
            result.put(scanHost.getIp(),scanHost.getName());
        }

        return result.toString();
    }

    @RequestMapping(value="/trafficMap", method= RequestMethod.POST, produces = "application/json; charset=utf-8")
    @ResponseBody
    public String getTrafficMap(@RequestParam String hostIp){
        JSONObject result = new JSONObject();

        List<Graph> graphs = topologyService.getInterfaceGraph(hostIp);

        result.put("","无");
        for (Graph graph:graphs){
            result.put(graph.getGraphUuid(),graph.getGraphName());
        }

        return result.toString();
    }


}
