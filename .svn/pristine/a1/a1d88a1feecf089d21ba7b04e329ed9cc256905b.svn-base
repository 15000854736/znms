package info.zznet.znms.base.job;

import info.zznet.znms.base.entity.ApInformation;
import info.zznet.znms.base.entity.Host;
import info.zznet.znms.spider.bean.ScanHost;
import info.zznet.znms.spider.util.SnmpUtil;
import info.zznet.znms.web.module.apInformation.service.ApInformationService;
import info.zznet.znms.web.module.system.service.HostService;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.quartz.DisallowConcurrentExecution;
import org.snmp4j.mp.SnmpConstants;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;


@Service
@DisallowConcurrentExecution
public class ApInfomationJob {
	
	
	@Autowired
	private HostService hostService;
	
	@Autowired
	private ApInformationService apInformationService;
	
	
	@Scheduled(initialDelay =10*1000,fixedDelay = 60*1000)
	public void updateApInfomation(){
		Map<String,String> map=new HashMap<String,String>();
		  map.put("MAC", "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.1.88.105.108.7.151.85");
		  map.put("ONLINENUM", "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.34.88.105.108.7.151.85");
		  map.put("ONLINEMAXNUM", "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.41.88.105.108.7.151.85");
		  List<Host> hostList = hostService.findAllAc();
	      for (Host host : hostList) {
	    	  ScanHost scanHost=new ScanHost();
	    	  scanHost.setCommunity(host.getSnmpCommunity());
	    	  scanHost.setSnmpUserName(host.getSnmpUserName());
	    	  scanHost.setSnmpAuthProtocol(host.getSnmpAuthProtocol());
	    	  scanHost.setSnmpPrivPassphrase(host.getSnmpPrivPassphrase());
	    	  scanHost.setSnmpVersion(host.getSnmpVersion()+"");
	    	  scanHost.setIp(host.getHostIp());
	    	  scanHost.setSnmpPort(host.getSnmpPort()+"");
	    	  scanHost.setSnmpPassword(host.getSnmpPassword());
	    	  scanHost.setSnmpUserName(host.getSnmpUserName());
//	    	  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.26.88.105.108.7.151.85";//AP的管理状态
//	    	  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.33.88.105.108.7.151.85";//AP的IP地址
//			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.1.88.105.108.7.151.85";//AP的MAC地址
//			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.2.88.105.108.7.151.85";//AP的名称
//			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.32.88.105.108.7.151.85";//AP的序列号
//			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.34.88.105.108.7.151.85";//当前在线人数
//			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.41.88.105.108.7.151.85";//最大在线人数
	    	  String []oids=new String[]{"1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.26.88.105.108.7.151.85",
	    			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.33.88.105.108.7.151.85",
	    			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.1.88.105.108.7.151.85",
	    			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.2.88.105.108.7.151.85",
	    			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.32.88.105.108.7.151.85",
	    			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.34.88.105.108.7.151.85",
	    			  "1.3.6.1.4.1.4881.1.1.10.2.56.2.1.1.1.41.88.105.108.7.151.85" };
	    	  Map<String, String> apResult=SnmpUtil.getApInfo(SnmpConstants.version2c, scanHost,oids);
	    	  String apMac=(String)apResult.get(map.get("MAC"));
	    	  ApInformation apInformation = apInformationService.findApByApMac(apMac.trim());
	    	  if(apInformation!=null){
	    		  String apOnlineNum=(String)apResult.get(map.get("ONLINENUM"));
	    		  apInformation.setApUserCount(Integer.parseInt(apOnlineNum.trim()));
	    		  
	    		  String apOnlineMaxNum=(String)apResult.get(map.get("ONLINEMAXNUM"));
	    		  apInformation.setApUserMax(Integer.parseInt(apOnlineMaxNum.trim()));
	    		  apInformation.setLastUpdateTime(new java.util.Date());
	    		  apInformationService.updateByPrimaryKeySelective(apInformation);
	    	  }
	      }
	}
	
	
}
