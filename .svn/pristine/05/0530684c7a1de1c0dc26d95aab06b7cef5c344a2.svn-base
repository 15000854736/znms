<%@ page contentType="text/html;charset=UTF-8" language="java"%>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="description" content="">
    <meta name="author" content="">
    <%@ include file="../common/include.jsp"%>
    <link rel="stylesheet" href="<%=path %>/css/next/next-topology.css">
    <script src="<%=path %>/js/next/next-base.js"></script>
    <script src="<%=path %>/js/next/next-topology.js"></script>




</head>

<body>
<!-- 头部菜单 start-->
<%@ include file="../common/header.jsp"%>
<%@ include file="../common/leftMenu.jsp"%>
<style type="text/css">
    .n-topology-container{
        margin-left: 170px;
    }
</style>
    <script>
        var topologyData = {
            nodes: [
                {"id": 0, "x": 0, "y": 0, "name": "eg","icon":"router","hostIp":"192.168.1.10"},
                {"id": 1, "x": 100, "y": 100, "name": "n18k","icon":"switch","hostIp":"10.40.255.253"},
                {"id": 2, "x": 200, "y": 200, "name": "192.168.1.12","icon":"server","hostIp":"192.168.1.12"},
                {"id": 3, "x": 900, "y": 600, "name": "192.168.1.116","icon":"groupm","hostIp":"192.168.1.116"},
                {"id": 4, "x": 500, "y": 500, "name": "192.168.1.2","icon":"wirelesshost","hostIp":"192.168.1.2"}
            ],
            links: [
                {"source": 0, "target": 1,"hostIp":"10.40.255.253","graphId":"9a7fbfa52869e983308185b646419013","maxBandwidth":"100M"},
                {"source": 1, "target": 2},
                {"source": 1, "target": 3},
                {"source": 4, "target": 1},
                {"source": 2, "target": 3},
                {"source": 2, "target": 0},
                {"source": 3, "target": 0},
                {"source": 0, "target": 4},
            ]
        };






        var topo;
        var app;
        (function (nx) {
            var windowHeight = $(window).height();
            var windowWidth = $(window).width();

            nx.define("ZNMSRect",nx.graphic.Topology.Layer,{
                properties:{
                    x1:{},
                    y1:{},
                    x2:{},
                    y2:{},
                    title:{},
                    icon:{},
                    name:{}
                },
                methods:{
                    init: function (args) {
                        this.inherited(args);
                        this.sets(args);
                    },
                    draw:function () {
                        var rect = this.rect = new nx.graphic.Rect();

                        var titleContainer = new nx.graphic.Polygon();

                        var title = new nx.graphic.Text();
                        var titleHeight = 25;
                        var titleWidth = 80;

                        var name = this.name();
                        title.sets({
                            text:this.title(),
                            x:this.x2()-titleWidth,
                            y:this.y1()-5,
                            /*x:10,
                            y:10,*/
                            'font-size':'20px',
                            fill:'#000066'
                        });

                        /*title.on('mouseup',function (sender,event) {
                            console.log('mouseup '+sender.innerHTML);
                        })*/
                        titleContainer.on('mouseenter',function (sender,event) {
                            topo.view('topo').dom().addClass('n-dragCursor');
                           /* var currentSceneName = topo.view('topo').currentSceneName();
                            if (currentSceneName != 'moveRect') {
                                topo.view('topo').activateScene('moveRect');
                                this._prevSceneName = currentSceneName;
                            }*/
                        });

                        titleContainer.on('mouseleave',function (sender,event) {
                            topo.view('topo').dom().removeClass('n-dragCursor');
                            nx.dom.Document.html().removeClass('n-dragCursor');
                           /* var currentSceneName = topo.view('topo').currentSceneName();
                            if (currentSceneName != 'default') {
                                topo.view('topo').activateScene('default');
                                this._prevSceneName = currentSceneName;
                            }*/
                        });

                        title.on('mouseenter',function (sender,event) {
                            topo.view('topo').dom().addClass('n-dragCursor');
                        });

                        title.on('mouseleave',function (sender,event) {
                            topo.view('topo').dom().removeClass('n-dragCursor');
                            nx.dom.Document.html().removeClass('n-dragCursor');
                        });

                        title.on('mouseup',function (sender,event) {
                            var pos = {'x':event.clientX,'y':event.clientY};
                            topo.view('topo')._tooltipManager.openRectContent(pos,name);
                        });

                        titleContainer.on('mouseup',function (sender,event) {
                            var pos = {'x':event.clientX,'y':event.clientY};
                            topo.view('topo')._tooltipManager.openRectContent(pos,name);
                        });



                        titleContainer.sets({
                            nodes:[
                                {
                                    x:this.x2()-titleWidth,
                                    y:this.y1()-titleHeight
                                },{
                                    x:this.x2(),
                                    y:this.y1()-titleHeight
                                },{
                                    x:this.x2(),
                                    y:this.y1()
                                },{
                                    x:this.x2()-titleWidth-titleHeight,
                                    y:this.y1()
                                }
                            ],
                            fill:'#00ccff',
                            'stroke-width':'2px',
                            stroke:'#00ccff',
                        });

                        rect.sets({
                            x:this.x1(),
                            y:this.y1(),
                            width:this.x2()-this.x1(),
                            height:this.y2()-this.y1(),
                            'stroke-width':'2px',
                            stroke:'#00ccff',
                            'fill-opacity':0
                        });

                        rect.attach(this);
                        titleContainer.attach(this);
                        title.attach(this);
                    }
                }
            });

            nx.define("MyLayer", nx.graphic.Topology.Layer, {
                methods: {
                    draw: function () {
                        var line = this.line = new nx.graphic.BezierCurves({
                            radian: 2
                        });
                        line.sets({
                            'stroke-width': '10px',
                            stroke: '#f00'

                        });
                        this.topology().on("zoomend", function () {
                            this._updateLine();
                        }, this);
                        this.topology().on("resetzooming", function () {
                            this._updateLine();
                        }, this);


                        this._updateLine();
                        line.attach(this);


                    },
                    _updateLine: function () {
                        var topo = this.topology();
                        var sourceNode = topo.getNode(2);
                        var targetNode = topo.getNode(4);
                        console.log("x:"+sourceNode.x()+",y:"+sourceNode.y());
                        console.log("x:"+targetNode.x()+",y:"+targetNode.y());
                        this.line.sets({
                            x1: sourceNode.x(),
                            y1: sourceNode.y(),
                            x2: targetNode.x(),
                            y2: targetNode.y()
                        })
                    }
                }
            });




            nx.define('ZNMSTopology', nx.ui.Component, {
                properties: {
                    icon: {
                        value: function() {
                            return function(vertex) {
                                return vertex.get("icon");
                            }
                        }
                    }
                },
                view: {
                    props: {
                        'class': ['n-topology-container'],
                        tabindex: '0',

                    },
                    content: {
                        name: 'topo',
                        type: 'nx.graphic.Topology',
                        props: {
                            width: windowWidth-180,
                            height: windowHeight-70,
                            initWidth:windowWidth-180,
                            initHeight:windowHeight-70,
                            nodeConfig: {
                                label: 'model.name',
                                iconType: '{#icon}'
                            },
                            showIcon: true,
                            //supportMultipleLink:false,
                            //layoutType: 'enterpriseNetworkLayout',
                            data: topologyData
                        },
                        events: {
                            'topologyGenerated': '{#_main}'
                        }
                    }
                },
                methods: {
                    _main: function (sender, events) {
                        //sender.attachLayer('mylayer', 'MyLayer');
                        //sender.prependLayer('mylayer', 'MyLayer');
                        //sender.insertLayerAfter('mylayer', 'MyLayer', 'nodes');
                        /*var rect = new ZNMSRect({
                            x1:0,
                            y1:0,
                            x2:200,
                            y2:200,
                            title:'图书馆',
                            name:'libRect'
                        });
                        sender.attachLayer('libRect', rect,0);

                        var lib = new ZNMSRect({
                            x1:0,
                            y1:0,
                            x2:500,
                            y2:500,
                            title:'科研楼',
                            name:'rdRect'
                        });
                        sender.attachLayer('rdRect', lib,0);*/
                    }
                }
            });

            app = new nx.ui.Application();
            topo = new ZNMSTopology();
            topo.attach(app);

        })(nx);

/*        function disable() {
            var links = topo.getLayer('links').links();
            var link = links[1];
            link.enable(false);
            link.update();
            topo.getNode(0).enable(false);
        }

        function enable() {
            var links = topo.getLayer('links').links();
            var link = links[1];
            link.enable(true);
            link.update();
            topo.getNode(0).enable(true);
        }

        setTimeout('disable()',5000);
        setTimeout('enable()',10000);*/

        function test() {

            /*topo.height(windowHeight);
            topo.width(windowWidth);*/

            //设置位置
            /*var sourceNode = topo.view('topo').getNode(2);
            sourceNode.absolutePosition({'x':100,'y':100});*/

            //添加node
            /*var newNode = new nx.graphic.Topology.Node();
            topo.view('topo').addNode(newNode,{
                label: 'model.id'
            });
            newNode.absolutePosition({'x':100,'y':100});
            newNode.label('newNode');*/


            /*var topoMatrix = topo.view('topo').matrix();
            var stageScale = topoMatrix.scale();

            var x = (200-topoMatrix.x())/stageScale;
            var y = (200-topoMatrix.y())/stageScale;

            topo.view('topo').addNode({
                "id": 5,
                "x":x,
                "y":y,
                "name": "newNode1"
            });
            topo.view('topo').addNode({
                "id": 6,
                "x":x+200,
                "y":y+200,
                "name": "newNode2"
            });*/

            /*topo.view('topo').addLink({
                source:5,
                target:6
            });*/
            //topo.getAbsolutePosition(node.position())

            //topo.view('topo').getLayer('rdRect').recover();

        }

        setTimeout('test()',5000);




    </script>
</body>
</html>
