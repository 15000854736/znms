package info.zznet.znms.web.module.screen.controller;

import info.zznet.znms.base.common.BaseController;
import info.zznet.znms.base.common.ZNMSLogger;
import info.zznet.znms.base.constants.PermissionConstants;
import info.zznet.znms.base.util.DateUtil;
import info.zznet.znms.web.WebRuntimeData;
import info.zznet.znms.web.annotation.CheckPermission;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.TreeMap;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

/**
 * 学生接入方式
 * Created by shenqilei on 2016/12/9.
 */
@Controller
@RequestMapping("/screen/module/studentAccessType")
public class ScreenStudentAccessTypeController extends BaseController{
	
	private WebRuntimeData webRuntimeData = WebRuntimeData.instance;

    @RequestMapping({"","/"})
    @CheckPermission(PermissionConstants.P_SCREEN_VIEW)
    public ModelAndView init(){
        ModelAndView mav = new ModelAndView("/screen/module/studentAccessType/index");

        return mav;
    }

    /**
     * 获取学生接入方数数据
     * @return
     */
    @RequestMapping(value = "/getStudentType", method = RequestMethod.POST, produces = {"application/json;charset=UTF-8"})
 	@ResponseBody
 	public String getAccessTime(){
 	   
		try {
			String zlogIp=webRuntimeData.getSystemOptionBean().getZlogIp();
			String zlogPort=webRuntimeData.getSystemOptionBean().getZlogPort();
			Map<String,String> paramMap=new HashMap<String, String>();
//			paramMap.put("from", "1481472000000");
//			paramMap.put("to", "1481558399998");
//			ApiClientUtil apiClientUtil=new ApiClientUtil("http://"+zlogIp+":"+zlogPort+"/z-log/api/rest/getOnlineAnalyzeResult");
//			apiClientUtil.post(paramMap);
//			String zlogresponse="{\"onlineDetail\":{\"教师\":{\"etcOnlineTimePerDay\":0,\"etcOnlineTimePerRecord\":0,\"pcOnlineTimePerDay\":7.080268,\"pcOnlineTimePerRecord\":6.076185,\"wirelessOnlineTimePerDay\":23.575,\"wirelessOnlineTimePerRecord\":15.716666},\"学生\":{\"etcOnlineTimePerDay\":0,\"etcOnlineTimePerRecord\":0,\"pcOnlineTimePerDay\":7.080268,\"pcOnlineTimePerRecord\":6.076185,\"wirelessOnlineTimePerDay\":23.575,\"wirelessOnlineTimePerRecord\":15.716666}},\"flow\":{\"教师\":{\"etcFlowPerDay\":0,\"etcFlowPerRecord\":0,\"pcFlowPerDay\":0,\"pcFlowPerRecord\":0,\"wirelessFlowPerDay\":0,\"wirelessFlowPerRecord\":0},\"学生\":{\"etcFlowPerDay\":0,\"etcFlowPerRecord\":0,\"pcFlowPerDay\":0,\"pcFlowPerRecord\":0,\"wirelessFlowPerDay\":0,\"wirelessFlowPerRecord\":0}},\"accessTypeCount\":{\"学生\":{\"有线1x接入\":1000,\"无线1x接入\":2000,\"有线portal接入\":300,\"无线portal接入\":20000},\"教师\":{\"有线1x接入\":18982,\"无线1x接入\":2}},\"accessTypeTrend\":{\"学生\":{\"1481676940000\":{\"有线1x接入\":10,\"无线1x接入\":20,\"有线portal接入\":100,\"无线portal接入\":50},\"1481582580000\":{\"有线1x接入\":30,\"无线1x接入\":50,\"有线portal接入\":200,\"无线portal接入\":80},\"1481560980000\":{\"有线1x接入\":50,\"无线1x接入\":200,\"有线portal接入\":200,\"无线portal接入\":80},\"1481566140000\":{\"有线1x接入\":0,\"无线1x接入\":0,\"有线portal接入\":3000,\"无线portal接入\":800},\"1481634360000\":{\"有线1x接入\":0,\"无线1x接入\":0,\"有线portal接入\":200,\"无线portal接入\":600},\"1481641440000\":{\"有线1x接入\":0,\"无线1x接入\":0,\"有线portal接入\":400,\"无线portal接入\":500},\"1481576220000\":{\"有线1x接入\":0,\"无线1x接入\":0,\"有线portal接入\":550,\"无线portal接入\":80},\"1481638380000\":{\"有线1x接入\":0,\"无线1x接入\":0,\"有线portal接入\":300,\"无线portal接入\":700}}},\"教师\":{\"1481576940000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481582580000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481560980000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481566140000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481634360000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481641440000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481576220000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481638380000\":{\"有线1x接入\":0,\"无线1x接入\":0}}}}";
			String zlogresponse="{\"onlineDetail\":{\"教师\":{\"etcOnlineTimePerDay\":0,\"etcOnlineTimePerRecord\":0,\"pcOnlineTimePerDay\":7.080268,\"pcOnlineTimePerRecord\":6.076185,\"wirelessOnlineTimePerDay\":23.575,\"wirelessOnlineTimePerRecord\":15.716666},\"学生\":{\"etcOnlineTimePerDay\":0,\"etcOnlineTimePerRecord\":0,\"pcOnlineTimePerDay\":7.080268,\"pcOnlineTimePerRecord\":6.076185,\"wirelessOnlineTimePerDay\":23.575,\"wirelessOnlineTimePerRecord\":15.716666}},\"flow\":{\"教师\":{\"etcFlowPerDay\":0,\"etcFlowPerRecord\":0,\"pcFlowPerDay\":0,\"pcFlowPerRecord\":0,\"wirelessFlowPerDay\":0,\"wirelessFlowPerRecord\":0},\"学生\":{\"etcFlowPerDay\":0,\"etcFlowPerRecord\":0,\"pcFlowPerDay\":0,\"pcFlowPerRecord\":0,\"wirelessFlowPerDay\":0,\"wirelessFlowPerRecord\":0}},\"accessTypeCount\":{\"学生\":{\"有线1x接入\":1000,\"无线1x接入\":2000,\"有线portal接入\":300,\"无线portal接入\":20000},\"教师\":{\"有线1x接入\":18982,\"无线1x接入\":2}},\"accessTypeTrend\":{\"学生\":{\"1481676940000\":{\"有线1x接入\":10,\"无线1x接入\":20,\"有线portal接入\":100,\"无线portal接入\":50},\"1481582580000\":{\"有线1x接入\":30,\"无线1x接入\":50,\"有线portal接入\":200,\"无线portal接入\":80},\"1481560980000\":{\"有线1x接入\":50,\"无线1x接入\":200,\"有线portal接入\":200,\"无线portal接入\":80},\"1481566140000\":{\"有线1x接入\":50,\"无线1x接入\":30,\"有线portal接入\":3000,\"无线portal接入\":800},\"1481634360000\":{\"有线1x接入\":60,\"无线1x接入\":70,\"有线portal接入\":200,\"无线portal接入\":600},\"1481641440000\":{\"有线1x接入\":100,\"无线1x接入\":200,\"有线portal接入\":400,\"无线portal接入\":500},\"1481576220000\":{\"有线1x接入\":30,\"无线1x接入\":20,\"有线portal接入\":550,\"无线portal接入\":80},\"1481638380000\":{\"有线1x接入\":0,\"无线1x接入\":0,\"有线portal接入\":300,\"无线portal接入\":700}}},\"教师\":{\"1481576940000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481582580000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481560980000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481566140000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481634360000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481641440000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481576220000\":{\"有线1x接入\":0,\"无线1x接入\":0},\"1481638380000\":{\"有线1x接入\":0,\"无线1x接入\":0}}}}";
			JSONObject zlogJsonObject=JSONObject.fromObject(zlogresponse);
			JSONObject countObject = (JSONObject) zlogJsonObject.get("accessTypeCount");
			JSONObject studentObject = (JSONObject) countObject.get("学生");
			Iterator keys = studentObject.keys();
			Map<String, Long> map = new LinkedHashMap<String, Long>();
			while(keys.hasNext()){
				String key = keys.next().toString();		
				String value = studentObject.getString(key);
				map.put(key, Long.valueOf(value));
			}
			Map<String, Long> sortMap = sortMapByValue(map);
			Map<String, Long> finalMap = new LinkedHashMap<String, Long>();
			JSONObject jsonbject = new JSONObject();
			JSONObject json = new JSONObject();
			if(sortMap.size()<=4){
				finalMap = sortMap;
			}else{
				int i = 0;
				long otherCount = 0;
				for(String key:sortMap.keySet()){
					if(i<=2){
						finalMap.put(key,sortMap.get(key));
					}else{
						otherCount += sortMap.get(key);
					}
				}
				finalMap.put("其他", otherCount);
			}
			json.putAll(finalMap);
			jsonbject.put("accessTypeCount", json.toString());
			
			//封装学生趋势图数据
			JSONObject trendObject = (JSONObject) zlogJsonObject.get("accessTypeTrend");
			JSONObject studentTrendObject = (JSONObject) trendObject.get("学生");
			Iterator trendKeys = studentTrendObject.keys();
			Map<String, Map<String, Long>> trendDataMap = new TreeMap<String, Map<String, Long>>();
			while(trendKeys.hasNext()){
				//按时间排序
				String key = trendKeys.next().toString();
				JSONObject dataObject = (JSONObject) studentTrendObject.get(key);
				Iterator dataKeys = dataObject.keys();
				Map<String, Long> trendMap = new LinkedHashMap<String, Long>();
				Map<String, Long> realMap = new LinkedHashMap<String, Long>();
				while(dataKeys.hasNext()){
					String trendkey = dataKeys.next().toString();
					String value = dataObject.getString(trendkey);
					trendMap.put(trendkey, Long.valueOf(value));
				}
				long total = 0;
				for(String mapKey : trendMap.keySet()){
					if(!finalMap.containsKey(mapKey) && finalMap.containsKey("其他")){
						total += trendMap.get(mapKey);
						realMap.put("其他", total);
					}else if(finalMap.containsKey(mapKey)){
						realMap.put(mapKey, trendMap.get(mapKey));
					}
				}
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				String time = sdf.format(new Date(Long.valueOf(key)));
				trendDataMap.put(time, realMap);
			}
			List<String> timeList = new ArrayList<String>();
			Map<String,List<Long>> typeMap = new TreeMap<String, List<Long>>();
			for(String key:trendDataMap.keySet()){
				timeList.add(key);
				Map<String, Long> map2 = trendDataMap.get(key);
				for(String typeKey: map2.keySet()){
					if(typeMap.containsKey(typeKey)){
						typeMap.get(typeKey).add(map2.get(typeKey));
					}else{
						List<Long> list = new ArrayList<Long>();
						list.add(map2.get(typeKey));
						typeMap.put(typeKey, list);
					}
				}
			}
			JSONArray timeArray = JSONArray.fromObject(timeList);
			jsonbject.put("timeArray",timeArray.toString());
			JSONObject jsob = new JSONObject();
			jsob.putAll(typeMap);
			jsonbject.put("trendData", jsob.toString());
			return jsonbject.toString();
		} catch (Exception e) {
			ZNMSLogger.error("Failed to get data from zos,"+e.getMessage());
		}
		return null;
 	}

    private Map<String, Long> sortMapByValue(Map<String, Long> oriMap){
         if (oriMap == null || oriMap.isEmpty()) {
 			return null;
 		}
 		Map<String, Long> sortedMap = new LinkedHashMap<String, Long>();
 		List<Map.Entry<String, Long>> entryList = new ArrayList<Map.Entry<String, Long>>(
 				oriMap.entrySet());
 		Collections.sort(entryList, new Comparator<Map.Entry<String,Long>>() {
            //降序排序
            public int compare(Entry<String, Long> o1,
                    Entry<String, Long> o2) {
                return o2.getValue().compareTo(o1.getValue());
            }
            
        });

 		Iterator<Map.Entry<String, Long>> iter = entryList.iterator();
 		Map.Entry<String, Long> tmpEntry = null;
 		while (iter.hasNext()) {
 			tmpEntry = iter.next();
 			sortedMap.put(tmpEntry.getKey(), Long.valueOf(tmpEntry.getValue()));
 		}
 		return sortedMap;
 	}


    public static void main(String[] args) {
		Map<String, Long> map = new LinkedHashMap<String, Long>();
		map.put("aa", 1l);
		map.put("bb", 100l);
		JSONObject jsonObject = new JSONObject();
		jsonObject.putAll(map);
		JSONObject json = new JSONObject();
		json.put("map", jsonObject.toString());
		System.out.println(json.toString());
	}
}
