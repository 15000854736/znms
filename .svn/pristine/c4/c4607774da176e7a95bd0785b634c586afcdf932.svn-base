/**
 * 
 */
package info.zznet.znms.web.module.systemLog;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

import info.zznet.znms.base.common.BaseController;
import info.zznet.znms.base.constants.PermissionConstants;
import info.zznet.znms.base.entity.SystemLogStatistics;
import info.zznet.znms.base.util.DateUtil;
import info.zznet.znms.base.util.StringUtil;
import info.zznet.znms.web.annotation.CheckPermission;
import info.zznet.znms.web.module.common.constants.SystemLogFacility;
import info.zznet.znms.web.module.common.constants.SystemLogPriority;
import info.zznet.znms.web.module.systemLog.bean.SystemLogPicBean;
import info.zznet.znms.web.module.systemLog.service.SystemLogStatisticsService;
import net.sf.json.JSONArray;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

/**
 * @author dell001
 *
 */
@Controller
@RequestMapping("/systemLogStatistics")
public class SystemLogStatisticsController extends BaseController{

	@Autowired
	private SystemLogStatisticsService logStatisticsService;
	
	private static final String VIEW_MIAN = "systemLog/systemLogStatistics_main";
	
	/**
	 * 跳转到日志统计页面
	 * @return
	 */
	@RequestMapping("")
	@CheckPermission(PermissionConstants.P_SYSTEM_LOG_STATISTICS_VIEW)
	public ModelAndView init(){
		ModelAndView mav = new ModelAndView(VIEW_MIAN);
		//开始时间
		mav.addObject("timeStart", StringUtil.getTodayStartDate());
		//结束时间
		mav.addObject("timeEnd", StringUtil.getTodayEndDate());
		return mav;
		
	}
	
	/**
	 * 查找饼图系统日志数据
	 * @return
	 */
	@RequestMapping(value = "/findPieData", method = RequestMethod.POST)
	@ResponseBody
	public String findPieDataByPriority(@RequestParam("id")String id,
			@RequestParam("hostId")String hostId, @RequestParam("insertTimeFrom")String insertTimeFrom,
			@RequestParam("insertTimeTo")String insertTimeTo, @RequestParam("type")Integer type){
		List<SystemLogStatistics> logList = logStatisticsService.findPieData(id, hostId, insertTimeFrom, insertTimeTo, type);
		List<SystemLogPicBean> list = new ArrayList<SystemLogPicBean>();
		if(type.intValue()==1){
			//按级别查找
			for (SystemLogStatistics systemLogStatistics : logList) {
				String name = SystemLogPriority.findValueByKey(systemLogStatistics.getPriorityId());
				list.add(new SystemLogPicBean(systemLogStatistics.getRecords(), name));
			}
		}else{
			for (SystemLogStatistics systemLogStatistics : logList) {
				String name = SystemLogFacility.findValueByKey(systemLogStatistics.getFacilityId());
				list.add(new SystemLogPicBean(systemLogStatistics.getRecords(), name));
			}
		}
		
		Collections.sort(list, new Comparator<SystemLogPicBean>() {
            public int compare(SystemLogPicBean o1, SystemLogPicBean o2) {
                Integer records1 = (Integer) o1.getValue();
                Integer redords2 = (Integer) o2.getValue();
                // 按记录数降序排序
                return redords2.compareTo(records1);
            }
        });
		return JSONArray.fromObject(list).toString();
	}
	
	/**
	 * 查找折线图数据
	 * @param priorityId
	 * @param facilityId
	 * @param hostId
	 * @return
	 */
	@RequestMapping(value = "/findLineData", method = RequestMethod.POST)
	@ResponseBody
	public String findLineData(@RequestParam("priorityId")String priorityId,
			@RequestParam("facilityId")String facilityId, @RequestParam("hostId")String hostId){
		List<SystemLogStatistics> logList = logStatisticsService.findLineData(priorityId, facilityId, hostId);
		List<SystemLogPicBean> list = new ArrayList<SystemLogPicBean>();
		for (SystemLogStatistics systemLogStatistics : logList) {
			String name = DateUtil.dateToStr(systemLogStatistics.getInsertTime(), DateUtil.DF_yyyyMMdd);
			list.add(new SystemLogPicBean(systemLogStatistics.getRecords(), name));
		}
		return JSONArray.fromObject(list).toString();
	}
}
