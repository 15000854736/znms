package info.zznet.znms.web.start;

import info.zznet.znms.base.common.ZNMSLogger;
import info.zznet.znms.base.dao.HostMapper;
import info.zznet.znms.base.dao.ThresholdValueMapper;
import info.zznet.znms.base.entity.Host;
import info.zznet.znms.base.entity.ThresholdValue;
import info.zznet.znms.base.util.SpringContextUtil;
import info.zznet.znms.spider.Engine;
import info.zznet.znms.spider.bean.ScanResult;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;

public class SystemStartThread extends Thread {
	private static Logger logger = Logger.getLogger(SystemStartThread.class);
	
	public static Map<String, List<ThresholdValue>> map = new HashMap<String, List<ThresholdValue>>();
	
	public static Map<String, Host> hostMap = new HashMap<String, Host>();
	public void run(){
		try{
			
			Engine engine = (Engine) SpringContextUtil.getBean("engine");
//			engine.startRrdExecutor();
			HostMapper hostMapper = (HostMapper)SpringContextUtil.getBean("hostMapper");
			List<Host> hostList = hostMapper.findAll();
			for (Host host : hostList) {
				hostMap.put(host.getHostIp(), host);
			}
			ThresholdValueMapper thresholdValueMapper = (ThresholdValueMapper) SpringContextUtil.getBean("thresholdValueMapper");
			Iterator<ScanResult> iterator= engine.otherQueue.iterator();
			while (iterator.hasNext()) {
				ScanResult result = iterator.next();
				map.put(result.getRrdDataId(), thresholdValueMapper.findByGrapUuid(result.getRrdDataId()));
			}
			ZNMSLogger.showOnConsole("=====Z-NMS Started=====");
			ZNMSLogger.info("启动Z-NMS成功！");
			while (true) {
				Iterator<ScanResult> it= engine.otherQueue.iterator();
				while (iterator.hasNext()) {
					ScanResult result = iterator.next();
					//检查是否触发相关阀值
					engine.checkThresholdValueAndOperation(result, map);
				}
			}
			
		}
		catch(Throwable t) {
			ZNMSLogger.error(t);
			ZNMSLogger.warn("Z-NMS系统启动失败,推出系统！");
			System.exit(0);
		}
	}
	
	public void shutDown() {

	}
}
