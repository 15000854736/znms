package info.zznet.znms.web.module.systemLog.collector;


public enum Facility {
	/** Kernel messages. */
    KERN(0),
    /** User level messages. */
    USER(1),
    /** Mail system. */
    MAIL(2),
    /** System daemons. */
    DAEMON(3),
    /** Security/Authorization messages. */
    AUTH(4),
    /** Messages generated by syslogd. */
    SYSLOG(5),
    /** Line printer subsystem. */
    LPR(6),
    /** Network news subsystem. */
    NEWS(7),
    /** UUCP subsystem. */
    UUCP(8),
    /** Clock daemon. */
    CRON(9),
    /** Security/Authorization messages. */
    AUTHPRIV(10),
    /** FTP daemon. */
    FTP(11),
    /** NTP subsystem. */
    NTP(12),
    /** Log audit. */
    LOG_AUDIT(13),
    /** Log alert. */
    LOG_ALERT(14),
    /** Clock daemon. */
    CLOCK(15),
    /** Local use 0. */
    LOCAL0(16),
    /** Local use 1. */
    LOCAL1(17),
    /** Local use 2. */
    LOCAL2(18),
    /** Local use 3. */
    LOCAL3(19),
    /** Local use 4. */
    LOCAL4(20),
    /** Local use 5. */
    LOCAL5(21),
    /** Local use 6. */
    LOCAL6(22),
    /** Local use 7. */
    LOCAL7(23);

    private final int code;

    private Facility(final int code) {
        this.code = code;
    }
    
    public static Facility valueOf(int code){
    	for(Facility f : Facility.values()){
    		if(f.getCode() == code){
    			return f;
    		}
    	}
    	return null;
    }

    /**
     * Retrieve the value of the enumeration.
     * @return The value associated with the enumeration.
     */
    public int getCode() {
        return this.code;
    }

    /**
     * Determine if this enumeration matches the specified name (ignoring case).
     * @param name The name to check.
     * @return true if the name matches this enumeration, ignoring case.
     */
    public boolean isEqual(final String name) {
        return this.name().equalsIgnoreCase(name);
    }
}
