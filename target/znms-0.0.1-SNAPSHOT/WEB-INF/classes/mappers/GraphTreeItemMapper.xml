<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="info.zznet.znms.base.dao.GraphTreeItemMapper" >
  <resultMap id="BaseResultMap" type="info.zznet.znms.base.entity.GraphTreeItem" >
    <id column="GRAPH_TREE_ITEM_UUID" property="graphTreeItemUuid" jdbcType="VARCHAR" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="PARENT_UUID" property="parentUuid" jdbcType="VARCHAR" />
    <result column="SORT" property="sort" jdbcType="INTEGER" />
    <result column="GRAPH_TREE_ITEM_TYPE" property="graphTreeItemType" jdbcType="INTEGER" />
    <result column="HOST_ID" property="hostId" jdbcType="VARCHAR" />
    <collection column="GRAPH_TREE_ITEM_UUID" property="childList" select="getChildList"></collection>
    <collection column="HOST_ID" property="host" select="info.zznet.znms.base.dao.HostMapper.selectByPrimaryKey"></collection>
  </resultMap>
  <sql id="Base_Column_List" >
    GRAPH_TREE_ITEM_UUID, TITLE, PARENT_UUID, SORT, GRAPH_TREE_ITEM_TYPE, HOST_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from GRAPH_TREE_ITEM
    where GRAPH_TREE_ITEM_UUID = #{graphTreeItemUuid,jdbcType=VARCHAR}
  </select>
  
  <select id="findAllRootByGraphTreeUuid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from GRAPH_TREE_ITEM
    where PARENT_UUID = #{graphTreeUuid,jdbcType=VARCHAR}
    order by SORT
  </select>
  
  <select id="getChildList" parameterType="java.lang.String" resultMap="BaseResultMap">
	  	SELECT <include refid="Base_Column_List" /> FROM GRAPH_TREE_ITEM
	  	WHERE PARENT_UUID = #{parentUuid, jdbcType=VARCHAR}
	  	ORDER BY SORT
   </select>
   
   <select id="getNode" parameterType="java.lang.String" resultMap="BaseResultMap">
	  	SELECT <include refid="Base_Column_List" /> FROM GRAPH_TREE_ITEM
	  	WHERE PARENT_UUID = #{graphTreeUuid, jdbcType=VARCHAR}
	  	AND GRAPH_TREE_ITEM_TYPE = 1
	  	ORDER BY SORT
   </select>
   
   <select id="findMaxSortItemByParentUuid" parameterType="java.lang.String" resultType="java.lang.Integer">
	  	SELECT max(SORT) FROM GRAPH_TREE_ITEM
	  	WHERE PARENT_UUID = #{parentUuid, jdbcType=VARCHAR}
   </select>
   
   <select id="findItemByTitleAndParentUuid"  resultMap="BaseResultMap">
	  	SELECT <include refid="Base_Column_List" /> FROM GRAPH_TREE_ITEM
	  	WHERE PARENT_UUID = #{parentUuid, jdbcType=VARCHAR}
	  	AND TITLE = #{title, jdbcType=VARCHAR} 
	  	AND GRAPH_TREE_ITEM_UUID != #{graphTreeItemUuid, jdbcType=VARCHAR}
   </select>
   
    <select id="findByParentUuidAndSort"  resultMap="BaseResultMap">
	  	SELECT <include refid="Base_Column_List" /> FROM GRAPH_TREE_ITEM
	  	WHERE PARENT_UUID = #{parentUuid, jdbcType=VARCHAR}
	  	AND SORT = #{sort, jdbcType=INTEGER} 
   </select>
   
    <select id="findByHostId"  resultMap="BaseResultMap" parameterType="java.lang.String">
	  	SELECT <include refid="Base_Column_List" /> FROM GRAPH_TREE_ITEM
	  	WHERE HOST_ID = #{hostId, jdbcType=VARCHAR}
   </select>
   
    <select id="findAllRootHostUuid"  resultType="java.lang.String" parameterType="java.lang.String">
	  	SELECT HOST_ID FROM GRAPH_TREE_ITEM
	  	WHERE PARENT_UUID = #{parentUuid, jdbcType=VARCHAR}
	  	AND GRAPH_TREE_ITEM_TYPE = 2
   </select>
   
    <select id="findAllRootNode"  resultMap="BaseResultMap" parameterType="java.lang.String">
	  	SELECT <include refid="Base_Column_List" /> FROM GRAPH_TREE_ITEM
	  	WHERE PARENT_UUID = #{parentUuid, jdbcType=VARCHAR}
	  	AND GRAPH_TREE_ITEM_TYPE = 1
   </select>
   
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from GRAPH_TREE_ITEM
    where GRAPH_TREE_ITEM_UUID = #{graphTreeItemUuid,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteItem" parameterType="java.util.List" >
    delete from GRAPH_TREE_ITEM 
    where GRAPH_TREE_ITEM_UUID in 
  	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>
  
  <insert id="insert" parameterType="info.zznet.znms.base.entity.GraphTreeItem" >
    insert into GRAPH_TREE_ITEM (GRAPH_TREE_ITEM_UUID, TITLE, PARENT_UUID, 
      SORT, GRAPH_TREE_ITEM_TYPE, HOST_ID)
    values (#{graphTreeItemUuid,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{parentUuid,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{graphTreeItemType,jdbcType=INTEGER}, 
      #{hostId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="info.zznet.znms.base.entity.GraphTreeItem" >
    insert into GRAPH_TREE_ITEM
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="graphTreeItemUuid != null" >
        GRAPH_TREE_ITEM_UUID,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="parentUuid != null" >
        PARENT_UUID,
      </if>
      <if test="sort != null" >
        SORT,
      </if>
      <if test="graphTreeItemType != null" >
        GRAPH_TREE_ITEM_TYPE,
      </if>
      <if test="sort != null" >
        HOST_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="graphTreeItemUuid != null" >
        #{graphTreeItemUuid,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="parentUuid != null" >
        #{parentUuid,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="graphTreeItemType != null" >
        #{graphTreeItemType,jdbcType=INTEGER},
      </if>
      <if test="graphTreeItemType != null" >
        #{hostId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="info.zznet.znms.base.entity.GraphTreeItem" >
    update GRAPH_TREE_ITEM
    <set >
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="parentUuid != null" >
        PARENT_UUID = #{parentUuid,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        SORT = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where GRAPH_TREE_ITEM_UUID = #{graphTreeItemUuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="info.zznet.znms.base.entity.GraphTreeItem" >
    update GRAPH_TREE_ITEM
    set TITLE = #{title,jdbcType=VARCHAR},
      PARENT_UUID = #{parentUuid,jdbcType=VARCHAR},
      SORT = #{sort,jdbcType=INTEGER}
    where GRAPH_TREE_ITEM_UUID = #{graphTreeItemUuid,jdbcType=VARCHAR}
  </update>
  
  <update id="updateGraphTreeItem" parameterType="info.zznet.znms.base.entity.GraphTreeItem" >
    update GRAPH_TREE_ITEM
    set TITLE = #{title,jdbcType=VARCHAR}
    where GRAPH_TREE_ITEM_UUID = #{graphTreeItemUuid,jdbcType=VARCHAR}
  </update>
  
  <update id="reSort" >
    update GRAPH_TREE_ITEM
    set SORT = SORT - 1
    where SORT > #{sort,jdbcType=INTEGER}
    and PARENT_UUID = #{parentUuid,jdbcType=VARCHAR}
  </update>
  
  <update id="upperShift" >
    update GRAPH_TREE_ITEM
    set SORT = SORT - 1
    where GRAPH_TREE_ITEM_UUID = #{graphTreeItemUuid,jdbcType=VARCHAR}
  </update>
  
  <update id="downShift" >
    update GRAPH_TREE_ITEM
    set SORT = SORT + 1
  	where GRAPH_TREE_ITEM_UUID = #{graphTreeItemUuid,jdbcType=VARCHAR}
  </update>
  
</mapper>