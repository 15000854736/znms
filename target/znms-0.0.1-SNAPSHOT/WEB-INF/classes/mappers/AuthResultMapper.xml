<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="info.zznet.znms.base.dao.AuthResultMapper" >
  <resultMap id="BaseResultMap" type="info.zznet.znms.base.entity.AuthResult" >
    <id column="AUTH_RESULT_UUID" property="authResultUuid" jdbcType="VARCHAR" />
    <result column="SERIAL_NUMBER" property="serialNumber" jdbcType="VARCHAR" />
    <result column="RETURN_MSG" property="returnMsg" jdbcType="VARCHAR" />
    <result column="RESULT_TYPE" property="resultType" jdbcType="TINYINT" />
    <result column="EXPIRY_DATE" property="expiryDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_HOST" property="createHost" jdbcType="VARCHAR" />
    <result column="UPDATE_HOST" property="updateHost" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    AUTH_RESULT_UUID, SERIAL_NUMBER, RETURN_MSG, RESULT_TYPE, EXPIRY_DATE, CREATE_TIME, 
    UPDATE_TIME, CREATE_HOST, UPDATE_HOST
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from AUTH_RESULT
    where AUTH_RESULT_UUID = #{authResultUuid,jdbcType=VARCHAR}
  </select>
  
  <select id="findAll" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from AUTH_RESULT
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from AUTH_RESULT
    where AUTH_RESULT_UUID = #{authResultUuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="info.zznet.znms.base.entity.AuthResult" >
    insert into AUTH_RESULT (AUTH_RESULT_UUID, SERIAL_NUMBER, RETURN_MSG, 
      RESULT_TYPE, EXPIRY_DATE, CREATE_TIME, 
      UPDATE_TIME, CREATE_HOST, UPDATE_HOST
      )
    values (#{authResultUuid,jdbcType=VARCHAR}, #{serialNumber,jdbcType=VARCHAR}, #{returnMsg,jdbcType=VARCHAR}, 
      #{resultType,jdbcType=TINYINT}, #{expiryDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createHost,jdbcType=VARCHAR}, #{updateHost,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="info.zznet.znms.base.entity.AuthResult" >
    insert into AUTH_RESULT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authResultUuid != null" >
        AUTH_RESULT_UUID,
      </if>
      <if test="serialNumber != null" >
        SERIAL_NUMBER,
      </if>
      <if test="returnMsg != null" >
        RETURN_MSG,
      </if>
      <if test="resultType != null" >
        RESULT_TYPE,
      </if>
      <if test="expiryDate != null" >
        EXPIRY_DATE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="createHost != null" >
        CREATE_HOST,
      </if>
      <if test="updateHost != null" >
        UPDATE_HOST,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authResultUuid != null" >
        #{authResultUuid,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null" >
        #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="resultType != null" >
        #{resultType,jdbcType=TINYINT},
      </if>
      <if test="expiryDate != null" >
        #{expiryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createHost != null" >
        #{createHost,jdbcType=VARCHAR},
      </if>
      <if test="updateHost != null" >
        #{updateHost,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="info.zznet.znms.base.entity.AuthResult" >
    update AUTH_RESULT
    <set >
      <if test="serialNumber != null" >
        SERIAL_NUMBER = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null" >
        RETURN_MSG = #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="resultType != null" >
        RESULT_TYPE = #{resultType,jdbcType=TINYINT},
      </if>
      <if test="expiryDate != null" >
        EXPIRY_DATE = #{expiryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createHost != null" >
        CREATE_HOST = #{createHost,jdbcType=VARCHAR},
      </if>
      <if test="updateHost != null" >
        UPDATE_HOST = #{updateHost,jdbcType=VARCHAR},
      </if>
    </set>
    where AUTH_RESULT_UUID = #{authResultUuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="info.zznet.znms.base.entity.AuthResult" >
    update AUTH_RESULT
    set SERIAL_NUMBER = #{serialNumber,jdbcType=VARCHAR},
      RETURN_MSG = #{returnMsg,jdbcType=VARCHAR},
      RESULT_TYPE = #{resultType,jdbcType=TINYINT},
      EXPIRY_DATE = #{expiryDate,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_HOST = #{createHost,jdbcType=VARCHAR},
      UPDATE_HOST = #{updateHost,jdbcType=VARCHAR}
    where AUTH_RESULT_UUID = #{authResultUuid,jdbcType=VARCHAR}
  </update>
</mapper>